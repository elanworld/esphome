---
name: Docker build push

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  init:
    name: Initialize build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Get tag
        id: tag
        # yamllint disable rule:line-length
        run: |
          if [[ "$GITHUB_EVENT_NAME" = "release" ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG=$(cat esphome/const.py | sed -n -E "s/^__version__\s+=\s+\"(.+)\"$/\1/p")
            today="$(date --utc '+%Y%m%d')"
            TAG="${TAG}${today}"
            BRANCH=${GITHUB_REF#refs/heads/}
            if [[ "$BRANCH" != "dev" ]]; then
              TAG="${TAG}-${BRANCH}"
            fi
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
        # yamllint enable rule:line-length

  deploy-docker:
    name: Build and publish ESPHome ${{ matrix.image.title}}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.image.title == 'lint' }}
    needs: [init]
    strategy:
      fail-fast: false
      matrix:
        image:
          - title: "ha-addon"
            suffix: "esphome-hassio"
            target: "hassio"
            baseimg: "hassio"
          - title: "docker"
            suffix: "esphome"
            target: "docker"
            baseimg: "docker"
          - title: "lint"
            suffix: "esphome-lint"
            target: "lint"
            baseimg: "docker"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Log in to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
            docker build \
              . \
              --file ./docker/Dockerfile \
              --platform linux/amd64 --platform linux/arm/v7 --platform linux/arm64 \
              --target ${{ matrix.image.target }} \
              --tag "${{ secrets.DOCKER_USER }}/${{ matrix.image.suffix }}:${{ needs.init.outputs.tag }}" \
              --build-arg BASEIMGTYPE=${{ matrix.image.baseimg }} \
              --build-arg BUILD_VERSION=${{ needs.init.outputs.tag }}
            docker push "${{ secrets.DOCKER_USER }}/${{ matrix.image.suffix }}:${{ needs.init.outputs.tag }}"
      - name: Tag latest and push
        run: |
          docker images
          IMAGE_TAG="${{ secrets.DOCKER_USER }}/${{ matrix.image.suffix }}:latest"
          docker tag "${{ secrets.DOCKER_USER }}/${{ matrix.image.suffix }}:${{ needs.init.outputs.tag }}" "$IMAGE_TAG"
          docker push "$IMAGE_TAG"
